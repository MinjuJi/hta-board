server.port=80

spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:Xe
spring.datasource.username=hta
spring.datasource.password=zxcv1234

# SQL의 생성 및 동작을 콘솔창에 표시해주는 설정
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

# ddl-auto
# 	- Entity 클래스를 정의하면 DDL(Data Denfinition Language)을 자동으로 작성하여 테이블을 생성하거나 수정하는 설정이다.
#	- 속성값
#			create
#				- Entity 클래스를 정의하면 매핑되는 테이블을 자동으로 생성한다. 
#				- 만약 테이블이 존재하면 기존 테이블을 삭제하고 새로 테이블을 생성한다.
#			create-drop
#				- create와 동일하게 동작하지만, 애플리케이션이 종료될 때 모든 테이블을 삭제한다.
#			update
#				- create와 동일하지만, 기존 테이블이 존재하면 삭제하는 것이 아니라 컬럼을 변경한다.
#				- 새로운 컬럼이 추가되는 경우에만 변경사항이 반영된다. 이미 존재하는 컬럼의 데이터 타입 변경의 경우 반영X
#			validate
#				- 다른 속성값과 달리 DDL 구문을 생성해서 테이블을 생성하거나 수정하지 않는다.
#				- 엔티티 클래스와 테이블이 정상적으로 매핑되는지만 검사한다. 
#			none
#				- 아무일도 일어나지 않는다.
#	**주의**
#	실제 프로젝트 환경에서 ddl-auto 속성값을 create, create-drop, update로 설정하면 절대로 안됨. 
#	프로젝트에서는 validate 사용 
#
spring.jpa.hibernate.ddl-auto=update